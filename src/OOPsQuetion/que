
1. Create a class Car with attributes make, model, and year. Include a method display_info() that prints the car's details. Then, create an object of the Car class and call the display_info() method.

2. Create a base class Animal with a method make_sound(). Create a derived class Dog that inherits from Animal and overrides the make_sound() method to print "Bark". Instantiate the Dog class and call the make_sound() method.

3. Create a class BankAccount with private attributes __balance and methods deposit() and withdraw() to modify the balance. Add a method get_balance() to return the current balance. Demonstrate the usage of these methods.

4. Create a base class Shape with a method area(). Create two derived classes Rectangle and Circle that override the area() method to calculate the area of a rectangle and a circle respectively. Demonstrate polymorphism by calling the area() method on objects of both derived classes.

5. Create an abstract class Vehicle with an abstract method start_engine(). Create two derived classes Car and Bike that implement the start_engine() method. Instantiate objects of Car and Bike and call their start_engine() methods.

6. Create a class Person with a constructor that initializes the attributes name and age. Add a destructor that prints a message when an object of Person is destroyed. Create an object of Person and observe the destructor's behavior.

7. Create a class MathOperations with a method add() that can take either two or three arguments to return their sum. Use default arguments to achieve this.

8. Create a class ComplexNumber to represent complex numbers and overload the + operator to add two complex numbers. Demonstrate the addition of two ComplexNumber objects.

9. Create a class Utility with a static method is_even() that returns True if a number is even, otherwise False. Demonstrate the usage of this static method without creating an object of the class.

10. Create a class Employee with a class attribute count and a class method increment_count() that increments the count. Demonstrate the usage of this class method and attribute.